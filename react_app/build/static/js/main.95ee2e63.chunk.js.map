{"version":3,"sources":["HomePage/HomePage.js","Scanner/Scanner.js","Manage/Manage.js","Inventory/Inventory.js","Manage/ManageContainer.js","App.js","serviceWorker.js","index.js"],"names":["styles","display","justifyContent","alignItems","minHeight","flexDirection","HomePage","react_default","a","createElement","style","Link","to","textDecoration","Button_default","variant","color","Scanner","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_onDetected","bind","assertThisInitialized","_isMobileDevice","id","className","autoPlay","preload","src","muted","playsInline","test","navigator","userAgent","Quagga","init","inputStream","type","constraints","width","height","facingMode","area","top","right","left","bottom","locator","patchSize","halfSample","numOfWorkers","decoder","readers","debug","showCanvas","showPatches","showFoundPatches","showSkeleton","showLabels","showPatchLabels","showRemainingPatchLabels","boxFromPatches","showTransformed","showTransformedBox","showBB","locate","err","console","log","start","onProcessed","result","drawingCtx","canvas","ctx","overlay","drawingCanvas","dom","boxes","clearRect","parseInt","getAttribute","filter","box","forEach","ImageDebug","drawPath","x","y","lineWidth","onDetected","offDetected","stop","Component","initialState","scanning","results","bookTitle","candidateISBN","imageLink","authors","error","Manage","state","_scan","_continueScanning","_reachedMaxResults","mode","_resultThresholdAchieved","_saveBook","_percentage","arr","sort","b","v","length","pop","isbn","url","process","fetch","then","response","json","data","status","res","totalItems","book","items","title","join","imageLinks","_this2","setState","catch","_this3","saveBook","_","marginTop","marginRight","marginLeft","onClick","marginBottom","maxWidth","es","percent","strokeWidth","strokeColor","src_Scanner_Scanner","alt","nextResults","concat","map","codeResult","code","getBookDetails","withStyles","theme","root","spacing","unit","overflowX","table","minWidth","tableRowHover","&:hover","backgroundColor","palette","grey","classes","Paper_default","Table_default","TableHead_default","TableRow_default","TableCell_default","align","TableBody_default","books","key","component","scope","name","ManageContainer","fetchBooks","REACT_APP_API_URL","window","location","origin","method","credentials","headers","Content-Type","Accept","ok","Error","content","body","JSON","stringify","toast","src_Manage_Manage","src_Inventory_Inventory","App","BrowserRouter","Route","path","exact","lib","autoClose","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.95ee2e63.chunk.js","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\nimport Button from '@material-ui/core/Button'\n\nconst styles = {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    minHeight: '100vh',\n    flexDirection: 'column'\n}\n\nconst HomePage = () =>\n    <div style={styles}>\n        <Link to=\"/manage\" style={{ textDecoration: 'none' }}>\n            <Button variant=\"contained\" color=\"primary\">Manage</Button>\n        </Link>\n    </div>\n\nexport default HomePage","import React, { Component } from 'react'\nimport Quagga from 'quagga'\nimport './Scanner.css'\n\nclass Scanner extends Component {\n    constructor(props) {\n        super(props)\n\n        this._onDetected = this._onDetected.bind(this)\n        this._isMobileDevice = this._isMobileDevice.bind(this)\n    }\n\n    render() {\n        return (\n            <div id=\"interactive\" className=\"viewport\">\n                <video className={this._isMobileDevice() ? null : 'scanningVideo'} autoPlay={true} preload=\"auto\" src=\"\" muted={true} playsInline={true} />\n                <canvas className=\"drawingBuffer\" />\n            </div>\n        )\n    }\n\n    _isMobileDevice() {\n        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)\n    }\n\n    componentDidMount() {\n        Quagga.init({\n            inputStream: {\n                type: \"LiveStream\",\n                constraints: {\n                    width: 640,\n                    height: 480,\n                    facingMode: \"environment\"\n                },\n                area: { // defines rectangle of the detection/localization area\n                    top: \"15%\",    // top offset\n                    right: \"15%\",  // right offset\n                    left: \"15%\",   // left offset\n                    bottom: \"15%\"  // bottom offset\n                }\n            },\n            locator: {\n                patchSize: \"x-large\",\n                halfSample: true\n            },\n            numOfWorkers: 2,\n            decoder: {\n                readers: [\"ean_reader\"],\n                debug: {\n                    showCanvas: true,\n                    showPatches: true,\n                    showFoundPatches: true,\n                    showSkeleton: true,\n                    showLabels: true,\n                    showPatchLabels: true,\n                    showRemainingPatchLabels: true,\n                    boxFromPatches: {\n                        showTransformed: true,\n                        showTransformedBox: true,\n                        showBB: true\n                    }\n                }\n            },\n            locate: true\n        }, function (err) {\n            if (err) {\n                return console.log(err)\n            }\n            Quagga.start()\n        })\n\n        Quagga.onProcessed(function (result) {\n            var drawingCtx = Quagga.canvas.ctx.overlay\n            var drawingCanvas = Quagga.canvas.dom.overlay\n\n            if (result) {\n                if (result.boxes) {\n                    drawingCtx.clearRect(0, 0, parseInt(drawingCanvas.getAttribute(\"width\")), parseInt(drawingCanvas.getAttribute(\"height\")))\n                    result.boxes.filter(function (box) {\n                        return box !== result.box\n                    }).forEach(function (box) {\n                        Quagga.ImageDebug.drawPath(box, { x: 0, y: 1 }, drawingCtx, { color: \"green\", lineWidth: 2 })\n                    })\n                }\n            }\n        })\n\n        Quagga.onDetected(this._onDetected)\n    }\n\n    componentWillUnmount() {\n        Quagga.offDetected(this._onDetected)\n        Quagga.stop()\n    }\n\n    _onDetected(result) {\n        if (this.props.onDetected(result)) {\n            Quagga.stop()\n        }\n    }\n}\n\nexport default Scanner\n","import React, { Component } from 'react'\nimport Scanner from '../Scanner/Scanner'\nimport './Manage.css'\nimport { Line } from 'rc-progress'\nimport Button from '@material-ui/core/Button'\nimport { Link } from 'react-router-dom'\n\nconst initialState = {\n    scanning: false,\n    results: [],\n    bookTitle: null,\n    candidateISBN: null,\n    imageLink: null,\n    authors: null,\n    error: null\n}\n\nconst SCAN_THRESHOLD_SIZE = 20\n\nclass Manage extends Component {\n    constructor(props) {\n        super(props)\n        this.state = initialState\n\n        this._scan = this._scan.bind(this)\n        this._onDetected = this._onDetected.bind(this)\n        this._continueScanning = this._continueScanning.bind(this)\n        this._reachedMaxResults = this._reachedMaxResults.bind(this)\n        this.mode = this.mode.bind(this)\n        this._resultThresholdAchieved = this._resultThresholdAchieved.bind(this)\n        this._saveBook = this._saveBook.bind(this)\n        this._percentage = this._percentage.bind(this)\n    }\n\n    // TODO: figure out how to do a secondary sort when a > b\n    mode(arr) {\n        return arr.sort((a, b) =>\n            arr.filter(v => v === a).length - arr.filter(v => v === b).length\n        ).pop()\n    }\n\n    async getBookDetails(isbn) {\n        var url = `${process.env.REACT_APP_BOOK_API_URL}${isbn}`\n\n        return fetch(url).then(response =>\n            response.json().then(data => ({\n                data: data,\n                status: response.status\n            }))\n        ).then(res => {\n            if (res.data.totalItems) {\n                const book = res.data.items[0];\n\n                const title = book['volumeInfo']['title']\n                const authors = book['volumeInfo']['authors'].join(', ')\n                const imageLinks = book['volumeInfo']['imageLinks']\n                const imageLink = imageLinks && imageLinks['thumbnail']\n\n                this.setState({\n                    bookTitle: title,\n                    authors: authors,\n                    imageLink: imageLink,\n                    error: ''\n                })\n            } else {\n                this.setState({\n                    bookTitle: '',\n                    authors: '',\n                    imageLink: '',\n                    error: 'ISBN not found'\n                })\n            }\n        }).catch(error => {\n            this.setState({\n                bookTitle: '',\n                authors: '',\n                imageLink: '',\n                error: 'Something went wrong'\n            })\n\n            throw error\n        })\n    }\n\n    _saveBook() {\n        this.props.saveBook(\n            this.state.bookTitle,\n            this.state.candidateISBN,\n            this.state.authors,\n            this.state.imageLink,\n        ).then(_ => {\n            this.setState(initialState)\n        })\n    }\n\n    render() {\n        return (\n            <div style={{ marginTop: '10px' }}>\n                <div>\n                    <Link to=\"/\" style={{ textDecoration: 'none', marginRight: '10px', marginLeft: '10px' }}>\n                        <Button variant=\"contained\" color=\"primary\">Back</Button>\n                    </Link>\n                    <Button onClick={this._scan} variant=\"contained\" color=\"primary\">{this.state.scanning ? 'Stop Scanning' : 'Scan Book ISBN'}</Button>\n                </div>\n                {this.state.scanning && <div style={{ marginTop: '10px', marginBottom: '10px', maxWidth: '500px' }}><Line percent={this._percentage()} strokeWidth=\"1\" strokeColor=\"#7ce26c\" /></div>}\n                {this.state.scanning && <div><div>Scanning<span className={this.state.scanning ? 'loader__dot' : null}>.</span><span className={this.state.scanning ? 'loader__dot' : null}>.</span><span className={this.state.scanning ? 'loader__dot' : null}>.</span></div><Scanner onDetected={this._onDetected} /></div>}\n                <div>{this._resultThresholdAchieved() && !this.state.scanning && this.state.candidateISBN}</div>\n                <div>{this._resultThresholdAchieved() && !this.state.scanning && this.state.bookTitle}</div>\n                <div>{this._resultThresholdAchieved() && !this.state.scanning && this.state.authors}</div>\n                <div>{this._resultThresholdAchieved() && !this.state.scanning && this.state.error}</div>\n                {this._resultThresholdAchieved() && !this.state.scanning && <img src={this.state.imageLink} alt='Missing' />}\n                {this._resultThresholdAchieved() && !this.state.scanning && !this.state.error && <div><Button type='submit' variant=\"contained\" color=\"secondary\" onClick={this._saveBook}>Add book</Button></div>}\n            </div>\n        )\n    }\n\n    _percentage() {\n        return (this.state.results.length / SCAN_THRESHOLD_SIZE) * 100\n    }\n\n    _resultThresholdAchieved() {\n        return this.state.results.length >= SCAN_THRESHOLD_SIZE\n    }\n\n    _scan() {\n        this.setState({ results: [], scanning: !this.state.scanning, error: '' })\n    }\n\n    _onDetected(result) {\n        const nextResults = this.state.results.concat([result])\n        this.setState(\n            {\n                results: nextResults,\n                scanning: this._continueScanning(nextResults)\n            }\n        )\n\n        if (this._reachedMaxResults(nextResults)) {\n            const candidateISBN = this.mode(this.state.results.map((result) => result.codeResult.code))\n            this.setState({\n                candidateISBN: candidateISBN\n            })\n            this.getBookDetails(candidateISBN)\n        }\n        return this._reachedMaxResults(nextResults)\n    }\n\n    _continueScanning(nextResults) {\n        if (this._reachedMaxResults(nextResults)) {\n            return false\n        }\n\n        return this.state.scanning\n    }\n\n    _reachedMaxResults(nextResults) {\n        return nextResults.length >= SCAN_THRESHOLD_SIZE\n    }\n}\n\nexport default Manage\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst styles = theme => ({\n    root: {\n        width: '100%',\n        marginTop: theme.spacing.unit * 3,\n        overflowX: 'auto',\n    },\n    table: {\n        minWidth: 700,\n    },\n    tableRowHover: {\n      '&:hover': {\n        backgroundColor: theme.palette.grey[200],\n      },\n    },\n})\n\nconst Inventory = (props) => {\n    const { classes } = props;\n\n    return (\n        <Paper className={classes.root}>\n            <Table className={classes.table}>\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Image</TableCell>\n                        <TableCell>Book Title</TableCell>\n                        <TableCell>Authors</TableCell>\n                        <TableCell align=\"right\">ISBN</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {props.books.map(book => {\n                        return (\n                            <TableRow key={book.id} className={classes.tableRowHover}>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    <img style={{height: '120px'}} src={book.imageLink} alt='missing'/>\n                                </TableCell>\n                                <TableCell>{book.name}</TableCell>\n                                <TableCell>{book.authors}</TableCell>\n                                <TableCell align=\"right\">{book.isbn}</TableCell>\n                            </TableRow>\n                        );\n                    })}\n                </TableBody>\n            </Table>\n        </Paper>\n    )\n}\n\nInventory.propTypes = {\n    classes: PropTypes.object.isRequired,\n    books: PropTypes.array.isRequired,\n}\n\nexport default withStyles(styles)(Inventory)\n","import React, { Component } from 'react'\nimport Manage from './Manage'\nimport Inventory from '../Inventory/Inventory'\nimport { toast } from 'react-toastify'\n\nclass ManageContainer extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            books: []\n        }\n\n        this.fetchBooks = this.fetchBooks.bind(this)\n        this.saveBook = this.saveBook.bind(this)\n    }\n\n    componentDidMount() {\n        this.fetchBooks()\n    }\n\n    async fetchBooks() {\n        const url = `${process.env.REACT_APP_API_URL || window.location.origin}/api/offices/1/books`\n\n        return fetch(url, {\n            method: 'GET',\n            mode: 'cors',\n            credentials: 'same-origin',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json',\n            },\n        }).then(response => {\n            if (response.ok) {\n                return response\n            } else {\n                throw Error(`Request rejected with status ${response.status}`)\n            }\n        }).then(response =>\n            response.json().then(content => ({\n                data: content.data,\n                status: response.status\n            }))\n        ).then(res =>\n            this.setState({\n                books: res.data.books\n            })\n        ).catch(error => {\n            throw error\n        })\n    }\n\n    async saveBook(bookTitle, candidateISBN, authors, imageLink) {\n        const url = `${process.env.REACT_APP_API_URL || window.location.origin}/api/offices/1/books`\n\n        return fetch(url, {\n            method: 'POST',\n            mode: 'cors',\n            credentials: 'same-origin',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json',\n            },\n            body: JSON.stringify({\n                name: bookTitle,\n                isbn: candidateISBN,\n                authors: authors,\n                imageLink: imageLink,\n            }),\n        }).then(response => {\n            if (response.ok) {\n                return response\n            } else {\n                throw Error(`Request rejected with status ${response.status}`)\n            }\n        }).then(_ => {\n            toast('Book saved!')\n            this.fetchBooks()\n        }).catch(error => {\n            throw error\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <Manage saveBook={this.saveBook}/>\n                <Inventory books={this.state.books} />\n            </div>\n        )\n    }\n}\n\nexport default ManageContainer","import React, { Component } from 'react'\nimport HomePage from './HomePage/HomePage'\nimport { BrowserRouter, Route } from \"react-router-dom\"\nimport ManageContainer from './Manage/ManageContainer'\nimport { ToastContainer } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\n\nclass App extends Component {\n    render() {\n        return (\n            <BrowserRouter>\n                <div>\n                    <Route path=\"/\" exact component={HomePage} />\n                    <Route path=\"/manage\" component={ManageContainer} />\n\n                    <ToastContainer autoClose={3000}/>\n                </div>\n            </BrowserRouter>\n        )\n    }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}